{"ast":null,"code":"var _jsxFileName = \"/home/harun/Desktop/Coding/Education/fullstackopen/fullstackopen/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatisticLine = _ref => {\n  let {\n    value,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, \" \", value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 11\n  }, this);\n};\n_c = StatisticLine;\nconst Statistics = _ref2 => {\n  let {\n    good,\n    bad,\n    neutral,\n    total\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"Good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"Neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"Bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"Total Feedbacks\",\n      value: total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"Avarage\",\n      value: (good - bad) / total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"Positive %\",\n      value: good / total * 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Statistics;\nconst Button = _ref3 => {\n  let {\n    eventHandler,\n    text\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: eventHandler,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Button;\nconst App = () => {\n  _s();\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const total = good + neutral + bad;\n  if (good === 0 & bad === 0 & neutral === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Give Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        eventHandler: () => setGood(good + 1),\n        text: \"Good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        eventHandler: () => setNeutral(neutral + 1),\n        text: \"Neutral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        eventHandler: () => setBad(bad + 1),\n        text: \"Bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \"No feedbacks given\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      eventHandler: () => setGood(good + 1),\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      eventHandler: () => setNeutral(neutral + 1),\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      eventHandler: () => setBad(bad + 1),\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral,\n      total: total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StatisticLine\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","StatisticLine","value","text","Statistics","good","bad","neutral","total","Button","eventHandler","App","setGood","setNeutral","setBad"],"sources":["/home/harun/Desktop/Coding/Education/fullstackopen/fullstackopen/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst StatisticLine = ({ value, text }) => {\n  return (<p>{text} {value}</p>)\n}\n\nconst Statistics = ({ good, bad, neutral, total }) => {\n  return (\n    <div>\n      <StatisticLine text={\"Good\"} value={good} />\n      <StatisticLine text={\"Neutral\"} value={neutral} />\n      <StatisticLine text={\"Bad\"} value={bad} />\n      <StatisticLine text={\"Total Feedbacks\"} value={total} />\n      <StatisticLine text={\"Avarage\"} value={(good - bad) / (total)} />\n      <StatisticLine text={\"Positive %\"} value={(good) / total * 100} />\n\n    </div>\n  )\n}\n\nconst Button = ({ eventHandler, text }) => {\n  return (\n    <button onClick={eventHandler}>{text}</button>\n  )\n\n}\n\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const total = (good + neutral + bad);\n\n  if (good === 0 & bad === 0 & neutral === 0) {\n    return (\n      <div><h1>Give Feedback</h1>\n        <Button eventHandler={() => setGood(good + 1)} text={\"Good\"} />\n        <Button eventHandler={() => setNeutral(neutral + 1)} text={\"Neutral\"} />\n        <Button eventHandler={() => setBad(bad + 1)} text={\"Bad\"} />\n        <h2>Statistics</h2>No feedbacks given</div>)\n  }\n  return (\n\n    <div>\n      <h1>Give Feedback</h1>\n      <Button eventHandler={() => setGood(good + 1)} text={\"Good\"} />\n      <Button eventHandler={() => setNeutral(neutral + 1)} text={\"Neutral\"} />\n      <Button eventHandler={() => setBad(bad + 1)} text={\"Bad\"} />\n      <h2>Statistics</h2>\n      <Statistics good={good} bad={bad} neutral={neutral} total={total} />\n\n    </div>\n  )\n}\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}